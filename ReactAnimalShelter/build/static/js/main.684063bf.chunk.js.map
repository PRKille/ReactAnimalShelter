{"version":3,"sources":["Components/AnimalDetails.js","Components/AnimalEdit.js","Components/SingleAnimal.js","Components/AnimalList.js","Components/AddAnimal.js","Components/LizardPeople.js","Components/home.js","Components/Header.js","Components/AnimalControl.js","App.js","serviceWorker.js","index.js"],"names":["AnimalDetails","props","params","match","useState","setLoadedState","animalState","setAnimalState","useEffect","fetch","type","animalId","then","response","json","jsonifiedResponse","catch","error","console","log","Container","Row","Col","md","span","offset","Card","Header","Title","className","Body","sm","name","breed","age","gender","Img","src","style","width","Footer","to","pathname","AnimalEdit","history","useHistory","idType","Form","onSubmit","e","preventDefault","raw","JSON","stringify","target","value","myHeaders","Headers","append","requestOptions","method","headers","body","text","result","push","Group","Control","placeholder","defaultValue","SingleAnimal","buttonStyle","margin","as","link","onClick","onAnimalAdoption","id","AnimalList","animalListState","setAnimalListState","loadState","setLoadState","location","useLocation","showAnimal","handleAnimalAdoption","Fragment","display","flexWrap","flexDirection","justifyContent","map","animal","catId","dogId","key","AddAnimal","redirect","onAnimalClick","Label","column","Check","label","LizardPeople","home","Jumbotron","Navbar","collapseOnSelect","expand","bg","variant","Brand","Link","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","href","eventKey","AnimalControl","setAnimal","exact","path","component","Home","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mWA8DeA,MAxDf,SAAuBC,GAAQ,IACZC,EAAaD,EAAtBE,MAASD,OADW,EAEYE,oBAAS,GAFrB,mBAEPC,GAFO,aAGYD,mBAAS,IAHrB,mBAGpBE,EAHoB,KAGPC,EAHO,KAmB5B,OAdAC,qBAAU,WACRC,MAAM,6BAAD,OAA8BP,EAAOQ,KAArC,YAA6CR,EAAOS,WACtDC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLR,EAAeQ,GACfV,GAAe,MAEhBW,OAAM,SAACC,GACNC,QAAQC,IAAI,2BAA4BF,QAE3C,IAGD,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,eAAtB,qBAEF,kBAACH,EAAA,EAAKI,KAAN,KACE,kBAACT,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKS,GAAI,GACP,0CAAgB7B,EAAOS,SAAvB,KACA,qCAAWL,EAAY0B,MACvB,sCAAY1B,EAAY2B,OACxB,oCAAU3B,EAAY4B,KACtB,uCAAa5B,EAAY6B,SAE3B,kBAACb,EAAA,EAAD,CAAKS,GAAI,GACP,kBAACL,EAAA,EAAKU,IAAN,CACEC,IAAG,+CAA0D,SAAhBnC,EAAOQ,KAAkB,MAAQ,OAC9E4B,MAAO,CAAEC,MAAO,YAKxB,kBAACb,EAAA,EAAKc,OAAN,CAAaX,UAAU,eACrB,kBAAC,IAAD,CAAMY,GAAI,CAAEC,SAAS,SAAD,OAAWxC,EAAOS,SAAlB,YAA8BT,EAAOQ,QACvD,4BAAQmB,UAAU,UAAlB,e,+BCmCDc,MAjFf,SAAoB1C,GAAQ,IAAD,EACeG,mBAAS,IADxB,mBACjBE,EADiB,KACJC,EADI,KAERL,EAAaD,EAAtBE,MAASD,OACX0C,EAAUC,cAEhBrC,qBAAU,WACRC,MAAM,6BAAD,OAA8BP,EAAOQ,KAArC,YAA6CR,EAAOS,WACtDC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLR,EAAeQ,MAEhBC,OAAM,SAACC,GACNC,QAAQC,IAAI,2BAA4BF,QAE3C,IAEH,IAAM6B,EAAyB,SAAhB5C,EAAOQ,KAAkB,QAAU,QA2BlD,OACE,6BACE,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,eAAtB,kBAEF,kBAACH,EAAA,EAAKI,KAAN,KACE,kBAACiB,EAAA,EAAD,CAAMC,SAlCO,SAACC,GAAO,IAAD,EAC9BA,EAAEC,iBAEF,IAAIC,EAAMC,KAAKC,WAAL,mBACPP,EAAS5C,EAAOS,UADT,qBAEFsC,EAAEK,OAAOtB,KAAKuB,OAFZ,sBAGDN,EAAEK,OAAOrB,MAAMsB,OAHd,oBAIHN,EAAEK,OAAOpB,IAAIqB,OAJV,uBAKAN,EAAEK,OAAOnB,OAAOoB,OALhB,IAQNC,EAAY,IAAIC,QACpBD,EAAUE,OAAO,eAAgB,oBAEjC,IAAIC,EAAiB,CACnBC,OAAQ,MACRC,QAASL,EACTM,KAAMX,GAER1C,MAAM,6BAAD,OAA8BP,EAAOQ,KAArC,YAA6CR,EAAOS,UAAYgD,GAClE/C,MAAK,SAACC,GAAD,OAAcA,EAASkD,UAC5BnD,MAAK,SAACoD,GAAD,OAAYpB,EAAQqB,KAAR,kBAAwB/D,EAAOS,SAA/B,YAA2CT,EAAOQ,UACnEM,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAI,QAASF,QAa7B,kBAAC8B,EAAA,EAAKmB,MAAN,KACE,kBAACnB,EAAA,EAAKoB,QAAN,CAAczD,KAAK,OAAOsB,KAAK,OAAOoC,YAAY,OAAOC,aAAc/D,EAAY0B,QAErF,kBAACe,EAAA,EAAKmB,MAAN,KACE,kBAACnB,EAAA,EAAKoB,QAAN,CAAczD,KAAK,OAAOsB,KAAK,QAAQoC,YAAY,QAAQC,aAAc/D,EAAY2B,SAEvF,kBAACc,EAAA,EAAKmB,MAAN,KACE,kBAACnB,EAAA,EAAKoB,QAAN,CAAczD,KAAK,SAASsB,KAAK,MAAMoC,YAAY,MAAMC,aAAc/D,EAAY4B,OAErF,kBAACa,EAAA,EAAKmB,MAAN,KACE,kBAACnB,EAAA,EAAKoB,QAAN,CAAczD,KAAK,OAAOsB,KAAK,SAASoC,YAAY,SAASC,aAAc/D,EAAY6B,UAEzF,kBAAC,IAAD,CAAQzB,KAAK,SAASmB,UAAU,aAAhC,sBCdDyC,MArDf,SAAsBrE,GACpB,IAKMsE,EAAc,CAClBC,OAAQ,OAGV,OACE,kBAAC9C,EAAA,EAAD,CAAMY,MAVY,CAClBC,MAAO,MACPiC,OAAQ,SASN,kBAAC9C,EAAA,EAAKC,OAAN,CAAaE,UAAU,cAAc4C,GAAG,MACrCxE,EAAM+B,MAET,kBAACN,EAAA,EAAKI,KAAN,KACE,kBAACT,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKS,GAAI,GACP,qCAAW9B,EAAMgC,MAAjB,KACA,mCAAShC,EAAMiC,IAAf,KACA,sCAAYjC,EAAMkC,OAAlB,MAEF,kBAACb,EAAA,EAAD,CAAKS,GAAI,GACP,kBAACL,EAAA,EAAKU,IAAN,CAAUC,IAAKpC,EAAMyE,KAAMpC,MAAO,CAAEC,MAAO,YAIjD,kBAACb,EAAA,EAAKc,OAAN,CAAaX,UAAU,cACrB,yBAAKA,UAAU,QACb,4BAAQS,MAAOiC,EAAa1C,UAAU,SAAS8C,QAAS,kBAAM1E,EAAM2E,iBAAiB3E,EAAM4E,MAA3F,SAGA,kBAAC,IAAD,CAAMpC,GAAE,kBAAaxC,EAAM4E,GAAnB,YAAyB5E,EAAMS,OACrC,4BAAQ4B,MAAOiC,EAAa1C,UAAU,UAAtC,gBC0CGiD,MA3Ef,SAAoB7E,GAAQ,IAAD,EACuBG,mBAAS,IADhC,mBACjB2E,EADiB,KACAC,EADA,OAEW5E,oBAAS,GAFpB,mBAEjB6E,EAFiB,KAENC,EAFM,OAGa9E,mBAAS,cAHtB,mBAKnB+E,GALmB,UAKRC,eAEDvC,cACIsC,EAASzC,SAE7BlC,qBAAU,WACHyE,GACHxE,MAAM,6BAAD,OAA8BR,EAAMoF,aACtCzE,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLiE,EAAmBjE,GACnBmE,GAAa,MAEdlE,OAAM,SAACC,GACNC,QAAQC,IAAI,2BAA4BF,SAKhD,IAAMqE,EAAuB,SAACT,GAC5BpE,MAAM,6BAAD,OAA8BR,EAAMoF,WAApC,YAAkDR,GAAM,CAAEjB,OAAQ,WACpEhD,MAAK,SAACC,GAAD,OAAcK,QAAQC,IAAI,SAAUN,MACzCD,MAAK,SAACG,GACLmE,GAAa,OAYnB,OAAID,EAEA,kBAAC,IAAMM,SAAP,KACE,wBAAI1D,UAAU,eAAd,iBACA,yBAAKS,MAZO,CAChBkD,QAAS,OACTC,SAAU,OACVC,cAAe,MACfC,eAAgB,SAChBpD,MAAO,SAQAwC,EAAgBa,KAAI,SAACC,GAEpB,OACE,kBAAC,EAAD,CACE7D,KAAM6D,EAAO7D,KACbtB,KAAMmF,EAAOC,MAAQ,OAAS,OAC9B7D,MAAO4D,EAAO5D,MACdC,IAAK2D,EAAO3D,IACZC,OAAQ0D,EAAO1D,OACf0C,GAAIgB,EAAOC,MAAQD,EAAOC,MAAQD,EAAOE,MACzCrB,KAAI,+CAA0CmB,EAAOC,MAAQ,MAAQ,MAAjE,YAA0ED,EAAO5D,OACrF2C,iBAAkBU,EAClBU,IAAKH,EAAOC,MAAQD,EAAOC,MAAQD,EAAOE,aAQ/C,4CCMIE,MA3Ef,SAAmBhG,GACjB,IAAM2C,EAAUC,cAgChB,OACE,kBAACxB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,eAAtB,iBAEF,kBAACH,EAAA,EAAKI,KAAN,KACE,kBAACiB,EAAA,EAAD,CAAMC,SAtCK,SAACC,GACpBA,EAAEC,iBADwB,MAEmBD,EAAEK,OAAvCtB,EAFkB,EAElBA,KAAMC,EAFY,EAEZA,MAAOC,EAFK,EAELA,IAAKC,EAFA,EAEAA,OAAQ0D,EAFR,EAEQA,OAE9BrC,EAAY,IAAIC,QACpBD,EAAUE,OAAO,eAAgB,oBAEjC,IAOIC,EAAiB,CACnBC,OAAQ,OACRC,QAASL,EACTM,KAVQV,KAAKC,UAAU,CACvBrB,KAAMA,EAAKuB,MACXtB,MAAOA,EAAMsB,MACbrB,IAAKA,EAAIqB,MACTpB,OAAQA,EAAOoB,QAOf2C,SAAU,UAGZzF,MAAM,6BAAD,OAA8BoF,EAAOtC,OAASI,GAChD/C,MAAK,SAACC,GAAD,OAAcA,EAASkD,UAC5BnD,MAAK,SAACoD,GACL/D,EAAMkG,cAAcN,EAAOtC,OAC3BX,EAAQqB,KAAR,gBAAsB4B,EAAOtC,WAE9BvC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAI,QAASF,QAY/B,kBAAC8B,EAAA,EAAKmB,MAAN,KACE,kBAACnB,EAAA,EAAKqD,MAAN,CAAY3B,GAAG,SAAS4B,QAAM,EAACtE,GAAI,GAAnC,YAGA,kBAACT,EAAA,EAAD,CAAKS,GAAI,IACP,kBAACgB,EAAA,EAAKuD,MAAN,CAAY5F,KAAK,QAAQ6F,MAAM,OAAOvE,KAAK,SAAS6C,GAAG,UAAUtB,MAAM,SACvE,kBAACR,EAAA,EAAKuD,MAAN,CAAY5F,KAAK,QAAQ6F,MAAM,OAAOvE,KAAK,SAAS6C,GAAG,UAAUtB,MAAM,WAI3E,kBAACR,EAAA,EAAKmB,MAAN,KACE,kBAACnB,EAAA,EAAKoB,QAAN,CAAczD,KAAK,OAAOsB,KAAK,OAAOoC,YAAY,UAEpD,kBAACrB,EAAA,EAAKmB,MAAN,KACE,kBAACnB,EAAA,EAAKoB,QAAN,CAAczD,KAAK,OAAOsB,KAAK,QAAQoC,YAAY,WAErD,kBAACrB,EAAA,EAAKmB,MAAN,KACE,kBAACnB,EAAA,EAAKoB,QAAN,CAAczD,KAAK,SAASsB,KAAK,MAAMoC,YAAY,SAErD,kBAACrB,EAAA,EAAKmB,MAAN,KACE,kBAACnB,EAAA,EAAKoB,QAAN,CAAczD,KAAK,OAAOsB,KAAK,SAASoC,YAAY,YAEtD,kBAAC,IAAD,CAAQ1D,KAAK,SAASmB,UAAU,aAAhC,oBCxDC2E,MATf,WACE,OACE,kBAACpF,EAAA,EAAD,CAAWS,UAAU,eACnB,+DACA,yBAAKQ,IAAI,0H,QCOAoE,MAXf,WACE,OACE,kBAACrF,EAAA,EAAD,KACE,kBAACsF,EAAA,EAAD,KACE,wBAAI7E,UAAU,eAAd,iBACA,wBAAIA,UAAU,eAAd,8B,wBC+COF,MAnDf,SAAgB1B,GAEd,OADgB4C,cAEd,6BACE,kBAAC8D,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACrD,kBAACJ,EAAA,EAAOK,MAAR,CAAcvC,GAAIwC,IAAMxE,GAAG,KAA3B,eAGA,kBAACkE,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBvC,GAAG,yBAClB,kBAACwC,EAAA,EAAD,CAAKxF,UAAU,WACb,kBAACwF,EAAA,EAAIJ,KAAL,CAAUxC,GAAIwC,IAAMxE,GAAG,QAAvB,iBAIA,kBAAC6E,EAAA,EAAD,CAAaC,MAAM,cAAc1C,GAAG,2BAClC,kBAACyC,EAAA,EAAYE,KAAb,CACE/C,GAAIwC,IACJxE,GAAG,aACHkC,QAAS,WACP1E,EAAMkG,cAAc,UAJxB,QASA,kBAACmB,EAAA,EAAYE,KAAb,CACE/C,GAAIwC,IACJxE,GAAG,aACHkC,QAAS,WACP1E,EAAMkG,cAAc,UAJxB,QASA,kBAACmB,EAAA,EAAYE,KAAb,CAAkB/E,GAAG,gBAAgBgC,GAAIwC,KAAzC,mBAKJ,kBAACI,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIJ,KAAL,CAAUQ,KAAK,YAAf,gBACA,kBAACJ,EAAA,EAAIJ,KAAL,CAAUS,SAAU,EAAGD,KAAK,UAA5B,mBCNGE,MA3Bf,WAA0B,IAAD,EACOvH,mBAAS,QADhB,mBACfyF,EADe,KACP+B,EADO,KAGvB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQzB,cAAeyB,IACvB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,gBAAgBC,UAAWvB,IAC7C,kBAAC,IAAD,CACEqB,OAAK,EACLC,KAAK,cACLC,UAAW,WACT,OAAO,kBAAC,EAAD,CAAY1C,WAAYQ,OAGnC,kBAAC,IAAD,CAAOiC,KAAK,0BAA0BC,UAAW/H,IACjD,kBAAC,IAAD,CAAO8H,KAAK,wBAAwBC,UAAWpF,IAC/C,kBAAC,IAAD,CACEmF,KAAK,OACLC,UAAW,WACT,OAAO,kBAAC,EAAD,CAAW5B,cAAeyB,SCrB5BK,MAJf,WACE,OAAO,kBAAC,EAAD,OCIWC,QACW,cAA7BC,OAAOhD,SAASiD,UAEe,UAA7BD,OAAOhD,SAASiD,UAEhBD,OAAOhD,SAASiD,SAASjI,MACvB,2D,MCXNkI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhI,MAAK,SAAAiI,GACJA,EAAaC,gBAEd9H,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM8H,c","file":"static/js/main.684063bf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './Button.css';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\n\r\nfunction AnimalDetails(props) {\r\n  const { match: { params } } = props;\r\n  const [ loadedState, setLoadedState ] = useState(false);\r\n  const [ animalState, setAnimalState ] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/api/${params.type}/${params.animalId}`)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((jsonifiedResponse) => {\r\n        setAnimalState(jsonifiedResponse);\r\n        setLoadedState(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log('Animal Shelter Error => ', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md={{ span: 6, offset: 3 }}>\r\n          <Card>\r\n            <Card.Header>\r\n              <Card.Title className=\"text-center\"> Animal Details </Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col sm={6}>\r\n                  <p> ID Number: {params.animalId} </p>\r\n                  <p> Name: {animalState.name}</p>\r\n                  <p> Breed: {animalState.breed}</p>\r\n                  <p> Age: {animalState.age}</p>\r\n                  <p> Gender: {animalState.gender}</p>\r\n                </Col>\r\n                <Col sm={6}>\r\n                  <Card.Img\r\n                    src={`https://source.unsplash.com/200x200/?${params.type === 'cats' ? 'cat' : 'dog'}`}\r\n                    style={{ width: '90%' }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-center\">\r\n              <Link to={{ pathname: `/edit/${params.animalId}/${params.type}` }}>\r\n                <button className=\"button\">Edit</button>\r\n              </Link>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AnimalDetails;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap';\r\n\r\nfunction AnimalEdit(props) {\r\n  const [ animalState, setAnimalState ] = useState({});\r\n  const { match: { params } } = props;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/api/${params.type}/${params.animalId}`)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((jsonifiedResponse) => {\r\n        setAnimalState(jsonifiedResponse);\r\n      })\r\n      .catch((error) => {\r\n        console.log('Animal Shelter Error => ', error);\r\n      });\r\n  }, []);\r\n\r\n  const idType = params.type === 'cats' ? 'catId' : 'dogId';\r\n\r\n  const handleAnimalEdit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let raw = JSON.stringify({\r\n      [idType]: params.animalId,\r\n      name: e.target.name.value,\r\n      breed: e.target.breed.value,\r\n      age: e.target.age.value,\r\n      gender: e.target.gender.value\r\n    });\r\n\r\n    let myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n\r\n    let requestOptions = {\r\n      method: 'PUT',\r\n      headers: myHeaders,\r\n      body: raw\r\n    };\r\n    fetch(`http://localhost:5000/api/${params.type}/${params.animalId}`, requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => history.push(`/detail/${params.animalId}/${params.type}`))\r\n      .catch((error) => console.log('error', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col md={{ span: 6, offset: 3 }}>\r\n          <Card>\r\n            <Card.Header>\r\n              <Card.Title className=\"text-center\"> Edit Animal </Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form onSubmit={handleAnimalEdit}>\r\n                <Form.Group>\r\n                  <Form.Control type=\"text\" name=\"name\" placeholder=\"Name\" defaultValue={animalState.name} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Control type=\"text\" name=\"breed\" placeholder=\"Breed\" defaultValue={animalState.breed} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Control type=\"number\" name=\"age\" placeholder=\"Age\" defaultValue={animalState.age} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Control type=\"text\" name=\"gender\" placeholder=\"Gender\" defaultValue={animalState.gender} />\r\n                </Form.Group>\r\n                <Button type=\"submit\" className=\"btn-block\">\r\n                  Edit Animal\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nAnimalEdit.propTypes = {};\r\n\r\nexport default AnimalEdit;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Col, Row, Button } from 'react-bootstrap';\r\nimport './Button.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SingleAnimal(props) {\r\n  const animalStyle = {\r\n    width: '40%',\r\n    margin: '15px'\r\n  };\r\n\r\n  const buttonStyle = {\r\n    margin: '5px'\r\n  };\r\n\r\n  return (\r\n    <Card style={animalStyle}>\r\n      <Card.Header className=\"text-center\" as=\"h5\">\r\n        {props.name}\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col sm={6}>\r\n            <p>Breed: {props.breed} </p>\r\n            <p>Age: {props.age} </p>\r\n            <p>Gender: {props.gender} </p>\r\n          </Col>\r\n          <Col sm={6}>\r\n            <Card.Img src={props.link} style={{ width: '90%' }} />\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Card.Footer className=\"text-muted\">\r\n        <div className=\"wrap\">\r\n          <button style={buttonStyle} className=\"button\" onClick={() => props.onAnimalAdoption(props.id)}>\r\n            Adopt\r\n          </button>\r\n          <Link to={`/detail/${props.id}/${props.type}`}>\r\n            <button style={buttonStyle} className=\"button\">\r\n              Details\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n\r\nSingleAnimal.propTypes = {\r\n  name: PropTypes.string,\r\n  breed: PropTypes.string,\r\n  age: PropTypes.number,\r\n  gender: PropTypes.string,\r\n  id: PropTypes.number,\r\n  link: PropTypes.string,\r\n  onAnimalAdoption: PropTypes.func\r\n};\r\n\r\nexport default SingleAnimal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport SingleAnimal from './SingleAnimal';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Form, Button, Card, Spinner } from 'react-bootstrap';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nfunction AnimalList(props) {\r\n  const [ animalListState, setAnimalListState ] = useState([]);\r\n  const [ loadState, setLoadState ] = useState(false);\r\n  const [ animalType, setAnimalType ] = useState('/list/cats');\r\n\r\n  const location = useLocation();\r\n\r\n  const history = useHistory();\r\n  const currentPath = location.pathname;\r\n\r\n  useEffect(() => {\r\n    if (!loadState) {\r\n      fetch(`http://localhost:5000/api/${props.showAnimal}`)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((jsonifiedResponse) => {\r\n          setAnimalListState(jsonifiedResponse);\r\n          setLoadState(true);\r\n        })\r\n        .catch((error) => {\r\n          console.log('Animal Shelter Error => ', error);\r\n        });\r\n    }\r\n  });\r\n\r\n  const handleAnimalAdoption = (id) => {\r\n    fetch(`http://localhost:5000/api/${props.showAnimal}/${id}`, { method: 'DELETE' })\r\n      .then((response) => console.log('DELETE', response))\r\n      .then((jsonifiedResponse) => {\r\n        setLoadState(false);\r\n      });\r\n  };\r\n\r\n  const listStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    width: '100%'\r\n  };\r\n\r\n  if (loadState) {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"text-center\"> Animal List </h1>\r\n        <div style={listStyle}>\r\n          {animalListState.map((animal) => {\r\n            // return <p key={v4()}>{animal.name}</p>;\r\n            return (\r\n              <SingleAnimal\r\n                name={animal.name}\r\n                type={animal.catId ? 'cats' : 'dogs'}\r\n                breed={animal.breed}\r\n                age={animal.age}\r\n                gender={animal.gender}\r\n                id={animal.catId ? animal.catId : animal.dogId}\r\n                link={`https://source.unsplash.com/200x200/?${animal.catId ? 'cat' : 'dog'} ${animal.breed}`}\r\n                onAnimalAdoption={handleAnimalAdoption}\r\n                key={animal.catId ? animal.catId : animal.dogId}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return <div>Loading...</div>;\r\n  }\r\n}\r\n\r\nAnimalList.propTypes = {\r\n  showAnimal: PropTypes.string\r\n};\r\n\r\nexport default AnimalList;\r\n","import React from 'react';\r\nimport { Row, Card, Col, Form, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddAnimal(props) {\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, breed, age, gender, animal } = e.target;\r\n\r\n    let myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n\r\n    let raw = JSON.stringify({\r\n      name: name.value,\r\n      breed: breed.value,\r\n      age: age.value,\r\n      gender: gender.value\r\n    });\r\n\r\n    let requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch(`http://localhost:5000/api/${animal.value}`, requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        props.onAnimalClick(animal.value);\r\n        history.push(`/list/${animal.value}`);\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={{ span: 6, offset: 3 }}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title className=\"text-center\"> Add Animal </Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group>\r\n                <Form.Label as=\"legend\" column sm={2}>\r\n                  Species:\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Check type=\"radio\" label=\"Cats\" name=\"animal\" id=\"animal1\" value=\"cats\" />\r\n                  <Form.Check type=\"radio\" label=\"Dogs\" name=\"animal\" id=\"animal2\" value=\"dogs\" />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Control type=\"text\" name=\"name\" placeholder=\"Name\" />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Control type=\"text\" name=\"breed\" placeholder=\"Breed\" />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Control type=\"number\" name=\"age\" placeholder=\"Age\" />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Control type=\"text\" name=\"gender\" placeholder=\"Gender\" />\r\n              </Form.Group>\r\n              <Button type=\"submit\" className=\"btn-block\">\r\n                Add Animal\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default AddAnimal;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction LizardPeople() {\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <h1> Lizard People Coming soon ... </h1>\r\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR1GHlfoffEX-YcuV0J3CpI_5JaYdZvdxpudjl42xZOqAlTiY_F&usqp=CAU\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LizardPeople;\r\n","import React from 'react';\r\nimport { Container, Jumbotron } from 'react-bootstrap';\r\n\r\nfunction home() {\r\n  return (\r\n    <Container>\r\n      <Jumbotron>\r\n        <h1 className=\"text-center\"> ShelterWoW! </h1>\r\n        <h2 className=\"text-center\"> This is the home page </h2>\r\n      </Jumbotron>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default home;\r\n","import React from 'react';\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          ShelterWoW!\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/add\">\r\n              Add an Animal\r\n            </Nav.Link>\r\n\r\n            <NavDropdown title=\"Animal List\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item\r\n                as={Link}\r\n                to=\"/list/cats\"\r\n                onClick={() => {\r\n                  props.onAnimalClick('Cats');\r\n                }}\r\n              >\r\n                Cats\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                as={Link}\r\n                to=\"/list/dogs\"\r\n                onClick={() => {\r\n                  props.onAnimalClick('Dogs');\r\n                }}\r\n              >\r\n                Dogs\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item to=\"/lizardpeople\" as={Link}>\r\n                Lizard People\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"#normies\">Normie Memes</Nav.Link>\r\n            <Nav.Link eventKey={2} href=\"#memes\">\r\n              Dank Memes\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AnimalDetails from './AnimalDetails';\r\nimport AnimalEdit from './AnimalEdit';\r\nimport AnimalList from './AnimalList';\r\nimport AddAnimal from './AddAnimal';\r\nimport LizardPeople from './LizardPeople';\r\nimport Home from './home';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, useParams } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nfunction AnimalControl() {\r\n  const [ animal, setAnimal ] = useState('Dogs');\r\n\r\n  return (\r\n    <Router>\r\n      <Header onAnimalClick={setAnimal} />\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/lizardpeople\" component={LizardPeople} />\r\n      <Route\r\n        exact\r\n        path=\"/list/:type\"\r\n        component={() => {\r\n          return <AnimalList showAnimal={animal} />;\r\n        }}\r\n      />\r\n      <Route path=\"/detail/:animalId/:type\" component={AnimalDetails} />\r\n      <Route path=\"/edit/:animalId/:type\" component={AnimalEdit} />\r\n      <Route\r\n        path=\"/add\"\r\n        component={() => {\r\n          return <AddAnimal onAnimalClick={setAnimal} />;\r\n        }}\r\n      />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AnimalControl;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AnimalControl from './Components/AnimalControl';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './Components/Header';\r\n// import LizardPeople from './LizardPeople';\r\n\r\nfunction App() {\r\n  return <AnimalControl />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}